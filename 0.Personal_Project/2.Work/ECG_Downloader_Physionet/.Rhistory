do_wavelet(8,"periodic")
where
?
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
ECG
source("do_wavelet.r")
ECG
do_wavelet(8,"periodic")
library(wavelets)
	ECG = read.table("/home/hansjung/바탕화면/temp/ECG.csv")
ECG
temp = ECG[1,]
temp
typeof(ECG)
typeof(temp)
ECG = ECG = read.table("/home/hansjung/바탕화면/temp/ECG.csv",sep = ",")
temp = ECG[1,]
typeof(temp)
patient = as.numeric(unlist(temp))
wt = dwt(patient,n.levels = 8, boundary = "periodic", fast = TRUE)
wt@W[8]
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
source("do_wavelet.r")
source("do_wavelet.r")
do_wavelet(8)
do_wavelet(8)
source("do_wavelet.r")
do_wavelet(8)
source("do_wavelet.r")
do_wavelet(8)
for (i in 1:nrow(ECG)){
temp = ECG[i,]
temp = temp[1:8192]
patient = as.numeric(unlist(temp))
wt = dwt(patient,n.levels = 8, boundary = "periodic", fast = TRUE)
write.table(wr@W[8],file = "result.csv",sep="," , col.names = NA, append = TRUE)
}
temp = ECG[1,]
temp = temp[1:8192]
patient = as.numeric(unlist(temp))
wt = dwt(patient,n.levels = 8, boundary = "periodic", fast = TRUE)
write.table(wr@W[8],file = "result.csv",sep="," , col.names = NA, append = TRUE
)
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
wr@W[8]
wt@W[8]
FF <- as.matrix(t(features))
FF <- as.matrix(t(jiyeon))
FF <- as.matrix(t(wt@W[8]))
write.table(FF, file = "data-appended.csv", sep = ",", 
            col.names = FALSE, append=TRUE)
write.table(FF, file = "data-appended.csv", sep = ",", 
            col.names = FALSE, append=TRUE)
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
jiyeon
A = wt@W[8]
A'
t(A)
A
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(10,"periodic")
A = t(A)
A
A[1]
A[1,]
A[1,]
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
A = wt@W[8]
A = t(A)
A
A[2]
A[1]
A[0]
A[1]
source("do_wavelet.r")
do_wavelet(8,"periodic")
A
A[2]
A[1]
write.csv("test.csv",sep=",",append=TRUE)
write.csv("test.csv",append=TRUE)
write.csv("test.csv"
)
write.csv(A[1],file = "test.csv")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
install.library("xlxs")
install.library("xlsx")
install.packages("xlsx")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
library(xlsx)
library(xlxs)
install.packages("xlsx")
source("do_wavelet.r")
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
A = A[1]
B = c(do.call("cbind",A)
)
B
typeof(B)
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
B
B = t(B)
B
do_wavelet(8,"periodic")
source("do_wavelet.r")
do_wavelet(8,"periodic")
source("do_wavelet.r")
source("do_wavelet.r")
do_wavelet(8,"d4","periodic")
source("do_wavelet.r")
do_wavelet(8,"d8","periodic")
J = 8
n.boundary = rep(NA,J)
n.boundary
wcoef = as.list(rep(NA,length=J))
wcoef
  W.coefs <- as.list(rep(NA, length=J))
W.coefs
a = [1.2,3]
a = c(1,2,3)
a = as.list(a)
a
a = a[-1,]
a = c(1,2,3)
a = a(-1)
a = a[-1]
a
a = a[-1,]
dim(a)
a = as.matrix(a)
a
dim(a)
source("do_wavelet.r")
source("do_wavelet.r")
do_wavelet(7,"db2","periodic")
source("do_wavelet.r")
do_wavelet(7,"db2","periodic")
do_wavelet(7,"haar","periodic")
source("do_wavelet.r")
do_wavelet(8,"haar","periodic","db2_32.csv")
do_wavelet(8,"db4","periodic","db4_32.csv")
do_wavelet(8,"d4","periodic","db4_32.csv")
do_wavelet(8,"d4","periodic","db4_64.csv")
do_wavelet(6,"d2","periodic","db2_128.csv")
a
dim(a)
dim(a)[2]
A = wt.filter("d2")
A
A = wt.filter("d8")
A
A = wt.filter("d2")
h = filter@h
filter = A
h = filter@h
g = filter@g
L = filter@L
M = 8192
Vj = rep(NA,length = (M/2))
Wj = rep(NA,length = (M/2))
for(t in 0:(M/2 - 1)){
u <- 2*t + 1
Wjt <- h[1]*V[u+1]
Vjt <- g[1]*V[u+1]
for(n in 1:(L-1)){
u <- u - 1
if(u < 0) u <- M - 1
Wjt <- Wjt + h[n+1]*V[u+1]
Vjt <- Vjt + g[n+1]*V[u+1]
}
Wj[t+1] <- Wjt
    Vj[t+1] <- Vjt
  }
